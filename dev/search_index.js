var documenterSearchIndex = {"docs":
[{"location":"#PhaseUtils.jl","page":"Home","title":"PhaseUtils.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PhaseUtils.jl","category":"page"},{"location":"#Types-and-Functions","page":"Home","title":"Types and Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [PhaseUtils]\nPrivate = false","category":"page"},{"location":"#PhaseUtils.bboxview","page":"Home","title":"PhaseUtils.bboxview","text":"bboxview(arr, mask, pad = 0)\n\nMake a box corresponding to the mask not-NaN elements surrounded by pad.\n\n\n\n\n\n","category":"function"},{"location":"#PhaseUtils.crop-Tuple{AbstractArray, Any, Any}","page":"Home","title":"PhaseUtils.crop","text":"crop(a::AbstractArray, cropsize[, cropcenter])\ncrop(cropsize[, cropcenter]) creates a cropping operator.\n\nCrop the array to cropsize around cropcenter. If cropcenter is omitted, use central element of the array.\n\ncropsize and cropcenter can be either tuples/vectors of integers or just single integer, which represent a tuple of identical numbers.\n\nExamples\n\njulia> a = reshape(1:15, 3, 5); crop(a, 1, (1, 3))\n1×1 Matrix{Int64}:\n 7\n\njulia> crop(a, (2, 2), (1, 3))\n1×2 Matrix{Int64}:\n 4  7\n\njulia> crop(3)(a)\n3×3 Matrix{Int64}:\n 4  7  10\n 5  8  11\n 6  9  12\n\n\n\n\n\n\n","category":"method"},{"location":"#PhaseUtils.itoh-Tuple{Any}","page":"Home","title":"PhaseUtils.itoh","text":"itoh(phi)\n\nItoh's algorithm for 1D phase unwrapping.\n\n\n\n\n\n","category":"method"},{"location":"#PhaseUtils.phwrap-Tuple{Number}","page":"Home","title":"PhaseUtils.phwrap","text":"Wrap Phase\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
